name: Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Which environment to deploy to [dev|prod].'
        default: dev
        required: true
jobs:
  deploy_to_s3:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_V2 }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_V2 }}
      PUBLIC_URL: ''
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 16

      - name: Print env
        run: env

      - name: Install dependencies
        run: yarn

      - name: Build
        if: ${{ github.event.inputs.environment == 'dev' || !github.event.inputs.environment }}
        run: yarn run build:dev

      - name: Deploy to dev
        if: ${{ github.event.inputs.environment == 'dev' || !github.event.inputs.environment }}
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ vars.S3_BUCKET_ADDRESS_DEV }}
          bucket-region: ap-northeast-1
          invalidation: /*
          dist-id: ${{ secrets.CLOUDFRONT_ID_DEV_V2 }}
          delete-removed: false
          no-cache: true
          private: true

      - name: Build for production
        if: github.event.inputs.environment == 'prod'
        run: npm run build

      - name: Deploy to prod
        if: github.event.inputs.environment == 'prod'
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ vars.S3_BUCKET_ADDRESS_PROD }}
          bucket-region: ap-northeast-1
          invalidation: /*
          dist-id: ${{ secrets.CLOUDFRONT_ID_PROD_V2 }}
          delete-removed: false
          no-cache: true
          private: true

  clean_cloudfront_cache:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_V2 }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_V2 }}
    steps:
      - name: clean cache dev
        if: ${{ github.event.inputs.environment == 'dev' || !github.event.inputs.environment }}
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_ID_DEV_V2 }}
          PATHS: '/*'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_V2 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_V2 }}
          AWS_REGION: 'us-east-1'

      - name: clean cache prod
        if: ${{ github.event.inputs.environment == 'prod' || !github.event.inputs.environment }}
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_ID_PROD_V2 }}
          PATHS: '/*'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_V2 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_V2 }}
          AWS_REGION: 'us-east-1'
